###################################################################
##
## Name     : nf10_upb_input_arbiter
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN nf10_upb_input_arbiter

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = BLACKBOX
OPTION IP_GROUP = UPB
OPTION DESC = NetFPGA-10G UPB AXI4-Stream Input Arbiter

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_INPUTS = 5, DT = integer, RANGE = (4:8)
PARAMETER C_DATA_WIDTH = 256, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_PACKET_LENGTH_WIDTH = 14, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TKEEP_WIDTH = 32, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_IN_PORT_WIDTH = 3, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_OUT_PORT_WIDTH = 8, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_WIDTH = 9, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_0 = 280, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_1 = 280, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_2 = 280, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_3 = 280, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_4 = 280, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_5 = 280, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_6 = 280, DT = integer, ASSIGNMENT = CONSTANT
PARAMETER C_TIMESLICE_7 = 280, DT = integer, ASSIGNMENT = CONSTANT

## Bus Interfaces
BUS_INTERFACE BUS = M_AXIS, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = S_AXIS_0, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS_1, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS_2, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS_3, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS_4, BUS_STD = AXIS, BUS_TYPE = TARGET, ISVALID = (C_NUM_INPUTS > 4)
BUS_INTERFACE BUS = S_AXIS_5, BUS_STD = AXIS, BUS_TYPE = TARGET, ISVALID = (C_NUM_INPUTS > 5)
BUS_INTERFACE BUS = S_AXIS_6, BUS_STD = AXIS, BUS_TYPE = TARGET, ISVALID = (C_NUM_INPUTS > 6)
BUS_INTERFACE BUS = S_AXIS_7, BUS_STD = AXIS, BUS_TYPE = TARGET, ISVALID = (C_NUM_INPUTS > 7)





## Ports
PORT clk = "", SIGIS = CLK, DIR = I, ASSIGNMENT = REQUIRE
PORT reset = "", SIGIS = RST, DIR = I

PORT s_axis_tdata_0 = TDATA, BUS=S_AXIS_0, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_0 = TKEEP, BUS=S_AXIS_0, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_0 = TLAST, BUS=S_AXIS_0, DIR = I
PORT s_axis_tvalid_0 = TVALID, BUS=S_AXIS_0, DIR = I
PORT s_axis_tuser_packet_length_0 = TUSER_PACKET_LENGTH, BUS=S_AXIS_0, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_0 = TUSER_IN_PORT, BUS=S_AXIS_0, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_0 = TUSER_OUT_PORT, BUS=S_AXIS_0, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_0 = TUSER_IN_VPORT, BUS=S_AXIS_0, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_0 = TUSER_OUT_VPORT, BUS=S_AXIS_0, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_0 = TREADY, BUS=S_AXIS_0, DIR = O

PORT s_axis_tdata_1 = TDATA, BUS=S_AXIS_1, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_1 = TKEEP, BUS=S_AXIS_1, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_1 = TLAST, BUS=S_AXIS_1, DIR = I
PORT s_axis_tvalid_1 = TVALID, BUS=S_AXIS_1, DIR = I
PORT s_axis_tuser_packet_length_1 = TUSER_PACKET_LENGTH, BUS=S_AXIS_1, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_1 = TUSER_IN_PORT, BUS=S_AXIS_1, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_1 = TUSER_OUT_PORT, BUS=S_AXIS_1, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_1 = TUSER_IN_VPORT, BUS=S_AXIS_1, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_1 = TUSER_OUT_VPORT, BUS=S_AXIS_1, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_1 = TREADY, BUS=S_AXIS_1, DIR = O

PORT s_axis_tdata_2 = TDATA, BUS=S_AXIS_2, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_2 = TKEEP, BUS=S_AXIS_2, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_2 = TLAST, BUS=S_AXIS_2, DIR = I
PORT s_axis_tvalid_2 = TVALID, BUS=S_AXIS_2, DIR = I
PORT s_axis_tuser_packet_length_2 = TUSER_PACKET_LENGTH, BUS=S_AXIS_2, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_2 = TUSER_IN_PORT, BUS=S_AXIS_2, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_2 = TUSER_OUT_PORT, BUS=S_AXIS_2, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_2 = TUSER_IN_VPORT, BUS=S_AXIS_2, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_2 = TUSER_OUT_VPORT, BUS=S_AXIS_2, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_2 = TREADY, BUS=S_AXIS_2, DIR = O

PORT s_axis_tdata_3 = TDATA, BUS=S_AXIS_3, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_3 = TKEEP, BUS=S_AXIS_3, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_3 = TLAST, BUS=S_AXIS_3, DIR = I
PORT s_axis_tvalid_3 = TVALID, BUS=S_AXIS_3, DIR = I
PORT s_axis_tuser_packet_length_3 = TUSER_PACKET_LENGTH, BUS=S_AXIS_3, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_3 = TUSER_IN_PORT, BUS=S_AXIS_3, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_3 = TUSER_OUT_PORT, BUS=S_AXIS_3, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_3 = TUSER_IN_VPORT, BUS=S_AXIS_3, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_3 = TUSER_OUT_VPORT, BUS=S_AXIS_3, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_3 = TREADY, BUS=S_AXIS_3, DIR = O

PORT s_axis_tdata_4 = TDATA, BUS=S_AXIS_4, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_4 = TKEEP, BUS=S_AXIS_4, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_4 = TLAST, BUS=S_AXIS_4, DIR = I
PORT s_axis_tvalid_4 = TVALID, BUS=S_AXIS_4, DIR = I
PORT s_axis_tuser_packet_length_4 = TUSER_PACKET_LENGTH, BUS=S_AXIS_4, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_4 = TUSER_IN_PORT, BUS=S_AXIS_4, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_4 = TUSER_OUT_PORT, BUS=S_AXIS_4, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_4 = TUSER_IN_VPORT, BUS=S_AXIS_4, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_4 = TUSER_OUT_VPORT, BUS=S_AXIS_4, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_4 = TREADY, BUS=S_AXIS_4, DIR = O

PORT s_axis_tdata_5 = TDATA, BUS=S_AXIS_5, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_5 = TKEEP, BUS=S_AXIS_5, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_5 = TLAST, BUS=S_AXIS_5, DIR = I
PORT s_axis_tvalid_5 = TVALID, BUS=S_AXIS_5, DIR = I
PORT s_axis_tuser_packet_length_5 = TUSER_PACKET_LENGTH, BUS=S_AXIS_5, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_5 = TUSER_IN_PORT, BUS=S_AXIS_5, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_5 = TUSER_OUT_PORT, BUS=S_AXIS_5, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_5 = TUSER_IN_VPORT, BUS=S_AXIS_5, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_5 = TUSER_OUT_VPORT, BUS=S_AXIS_5, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_5 = TREADY, BUS=S_AXIS_5, DIR = O

PORT s_axis_tdata_6 = TDATA, BUS=S_AXIS_6, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_6 = TKEEP, BUS=S_AXIS_6, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_6 = TLAST, BUS=S_AXIS_6, DIR = I
PORT s_axis_tvalid_6 = TVALID, BUS=S_AXIS_6, DIR = I
PORT s_axis_tuser_packet_length_6 = TUSER_PACKET_LENGTH, BUS=S_AXIS_6, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_6 = TUSER_IN_PORT, BUS=S_AXIS_6, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_6 = TUSER_OUT_PORT, BUS=S_AXIS_6, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_6 = TUSER_IN_VPORT, BUS=S_AXIS_6, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_6 = TUSER_OUT_VPORT, BUS=S_AXIS_6, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_6 = TREADY, BUS=S_AXIS_6, DIR = O

PORT s_axis_tdata_7 = TDATA, BUS=S_AXIS_7, DIR = I, VEC = [(C_DATA_WIDTH-1):0]
PORT s_axis_tkeep_7 = TKEEP, BUS=S_AXIS_7, DIR = I, VEC = [(C_TKEEP_WIDTH-1):0]
PORT s_axis_tlast_7 = TLAST, BUS=S_AXIS_7, DIR = I
PORT s_axis_tvalid_7 = TVALID, BUS=S_AXIS_7, DIR = I
PORT s_axis_tuser_packet_length_7 = TUSER_PACKET_LENGTH, BUS=S_AXIS_7, DIR = I, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT s_axis_tuser_in_port_7 = TUSER_IN_PORT, BUS=S_AXIS_7, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_port_7 = TUSER_OUT_PORT, BUS=S_AXIS_7, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tuser_in_vport_7 = TUSER_IN_VPORT, BUS=S_AXIS_7, DIR = I, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT s_axis_tuser_out_vport_7 = TUSER_OUT_VPORT, BUS=S_AXIS_7, DIR = I, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT s_axis_tready_7 = TREADY, BUS=S_AXIS_7, DIR = O


PORT m_axis_tdata = TDATA, BUS=M_AXIS, DIR = O, VEC = [(C_DATA_WIDTH-1):0]
PORT m_axis_tkeep = TKEEP, BUS=M_AXIS, DIR = O, VEC = [(C_TKEEP_WIDTH-1):0]
PORT m_axis_tlast = TLAST, BUS=M_AXIS, DIR = O
PORT m_axis_tvalid = TVALID, BUS=M_AXIS, DIR = O
PORT m_axis_tuser_packet_length = TUSER_PACKET_LENGTH, BUS=M_AXIS, DIR = O, VEC = [(C_PACKET_LENGTH_WIDTH-1):0]
PORT m_axis_tuser_in_port = TUSER_IN_PORT, BUS=M_AXIS, DIR = O, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT m_axis_tuser_out_port = TUSER_OUT_PORT, BUS=M_AXIS, DIR = O, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT m_axis_tuser_in_vport = TUSER_IN_VPORT, BUS=M_AXIS, DIR = O, VEC = [(C_IN_PORT_WIDTH-1):0]
PORT m_axis_tuser_out_vport = TUSER_OUT_VPORT, BUS=M_AXIS, DIR = O, VEC = [(C_OUT_PORT_WIDTH-1):0]
PORT m_axis_tready = TREADY, BUS=M_AXIS, DIR = I

END
